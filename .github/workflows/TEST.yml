name: Building TWRP

on:
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  workflow_dispatch:

env:
  MANIFEST: https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp -b twrp-12.1
  DEVICE: X676C
  DT_LINK: https://github.com/lopestom/twrp_device_infinix_X676C
  DT_PATH: device/infinix/X676C
  TARGET: vendorbootimage
  TZ: Asia/manila
#  BRANCH: WIP

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:

    - name: Checkout
      uses: actions/checkout@master

    # You might want to Checkout your repo first, but not mandatory
    - name: Check Out
      uses: actions/checkout@v3
    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      # That's it! Now use your normal steps

    - name: Prepare the environment
      run: |
       sudo apt update
       sudo apt -y upgrade
       sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libncurses5 python
 
    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo
      
    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "lopestom"
        git config --global user.email "guillopes2002@gmail.com"
        repo init --depth=1 -u $MANIFEST
        repo sync -c -j8 --force-sync --no-clone-bundle --no-tags
        rm -rf .repo
      id: pwd

    - name: Install OpenJDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
       swap-size-gb: 12

#    - name: Sync recovery source and device tree
#      run: |
#       PATH=~/bin:$PATH
#       mkdir twrp
#       cd twrp
#       repo init -u $MANIFEST --depth=1
#       repo sync -c -j8 --force-sync --no-clone-bundle --no-tags
#       rm -rf .repo
             
    - name: Checkout device tree
      uses: actions/checkout@v2
      with:
       path: twrp/device/infinix/X676C
             
    - name: Building recovery
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch twrp_X676C-eng && make clean && make vendorbootimage -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: workspace/out/target/product/X676C/*.img
        name: X676C-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: twrp-12.1
          Device: X676C
          Target: vendorbootimage.img
      env:
        GITHUB_TOKEN: ${{ secrets.TEST }}
